spring.main.banner-mode=off
logging.level.org.springframework=ERROR


spring.datasource.password=startapproot
server.port=5000
spring.sql.init.mode=always
spring.sql.init.platform=postgres
spring.datasource.url=jdbc:postgresql://start-app-db.conrgehghtuc.us-east-1.rds.amazonaws.com:5432/startapp_DB
spring.datasource.username=startapp
#spring.datasource.username=dxaooutvgrqvby
#spring.datasource.password=4a866e0cd101bc9c2fe601930af41bf70f0523d27d3ae9a8e23e95cf5fddced6
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.jpa.show-sql=true

spring.jpa.hibernate.ddl-auto=update
spring.jpa.hibernate.dialect=org.hibernate.dialect.PostgresSQL95Dialect
bezkoder.app.jwtSecret= bezKoderSecretKey
bezkoder.app.jwtExpirationMs= 86400000
spring.redis.host=localhost
spring.redis.port=6379
## MULTIPART (MultipartProperties)
# Enable multipart uploads
spring.servlet.multipart.enabled=true
# Threshold after which files are written to disk.
spring.servlet.multipart.file-size-threshold=2KB
# Max file size.
spring.servlet.multipart.max-file-size=200MB
# Max Request Size
spring.servlet.multipart.max-request-size=215MB
s3.endpointUrl=https://s3.amazonaws.com
s3.accessKeyId=AKIAZACFVAOYERCMWUPR
s3.secretKey=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
s3.bucketName=bucket-amazon
s3.region=us-east-1

#Urldeployment :  https://start-app-api.herokuapp.com
# Heroku github:  https://git.heroku.com/start-app-api.git
server.tomcat.max-connections= 20000



#spring.kafka.consumer.bootstrap-servers=kafka+ssl://ec2-52-48-167-48.eu-west-1.compute.amazonaws.com:9096
spring.kafka.consumer.bootstrap-servers=localhost:9092
spring.kafka.consumer.group-id=plantplaces
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer

spring.kafka.producer.bootstrap-servers=localhost:9092
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
io.reflectoring.kafka.bootstrap-servers: localhost:9092
java -jar -Dspring.profiles.active=prod application.jar
